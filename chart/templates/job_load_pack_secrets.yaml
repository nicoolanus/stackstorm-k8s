{{- $st2Values := index .Values "stackstorm-ha" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-eg-load-pack-secrets
  labels: {{- include "stackstorm-ha.labels" (list $ "st2") | nindent 4 }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "20"
  {{- if $st2Values.jobs.annotations }}
    {{- toYaml $st2Values.jobs.annotations | nindent 4 }}
  {{- end }}
spec:
  template:
    metadata:
      name: job-eg-load-pack-secrets
      labels: {{- include "stackstorm-ha.labels" (list $ "st2") | nindent 8 }}
      annotations:
        sidecar.istio.io/inject: "false"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/namespace: {{ .Values.global.vault.namespace }}
        vault.hashicorp.com/role: {{ (printf "%s.%s" $.Release.Namespace (include "st2.serviceaccount.name" .)) }}
        {{- $secretsPath := (printf "%s/%s/kv-v2/data/%s/%s" .Values.global.vault.islandNamespace $.Release.Namespace (include "st2.serviceaccount.name" .) "pack-secrets") }}
        vault.hashicorp.com/agent-inject-secret-secrets.yaml: {{ $secretsPath | quote }}
        vault.hashicorp.com/agent-inject-template-secrets.yaml: |-
          {{ `{{- with secret `}}{{ $secretsPath | quote }}{{` -}}
          ---
          {{- range $name, $value := .Data.data }}
          - name: {{ $name }}
            value: {{ $value }}
            secret: true
          {{- end }}
          {{ end }}`}}
      {{- if $st2Values.jobs.annotations }}
        {{- toYaml $st2Values.jobs.annotations | nindent 8 }}
      {{- end }}
    spec:
      imagePullSecrets:
      {{- if $st2Values.image.pullSecret }}
      - name: {{ $st2Values.image.pullSecret }}
      {{- end }}
      restartPolicy: OnFailure
      serviceAccountName: {{ (include "st2.serviceaccount.name" .) }}
      initContainers:
      - name: wait-for-api
        image: public-docker-virtual.artylab.expedia.biz/busybox:1.28
        command:
          - 'sh'
          - '-c'
          - >
            until nc -z -w 2 {{ .Release.Name }}-st2api 9101 && echo st2api ready;
              do sleep 2;
            done
      # Sidecar container for generating st2client config with st2 username & password pair and sharing produced file with the main container
      - name: generate-st2client-config
        image: '{{ template "stackstorm-ha.imageRepository" (dict "Values" $st2Values) }}/st2actionrunner:{{ tpl ($st2Values.image.tag) (index .Subcharts "stackstorm-ha") }}'
        imagePullPolicy: {{ $st2Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        - secretRef:
            name: {{ .Release.Name }}-st2-auth
        volumeMounts:
        - name: st2client-config-vol
          mountPath: /root/.st2/
        # `st2 login` doesn't exit on failure correctly, use old methods instead. See bug: https://github.com/StackStorm/st2/issues/4338
        command:
          - 'sh'
          - '-ec'
          - |
            cat <<EOT > /root/.st2/config
            {{- tpl $st2Values.jobs.st2clientConfig . | nindent 12 }}
            EOT
      containers:
      - name: load-pack-secrets
        image: '{{ template "stackstorm-ha.imageRepository" (dict "Values" $st2Values) }}/st2actionrunner:{{ tpl ($st2Values.image.tag) (index .Subcharts "stackstorm-ha") }}'
        imagePullPolicy: {{ $st2Values.image.pullPolicy }}
        command:
          - 'sh'
          - '-c'
          - |
            exec 3>&1 1>load.log
            st2 key load -c /vault/secrets/secrets.yaml
            exit_code=$?
            exec 1>&3 3>&-

            if [ $exit_code -ne 0 ]; then
              echo ERROR loading pack secrets from vault
              cat load.log
            else
              echo SUCCESS loading pack secrets from vault
            fi
            rm load.log
            exit $exit_code
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        - name: st2client-config-vol
          mountPath: /root/.st2/
      volumes:
        - name: st2client-config-vol
          emptyDir:
            medium: Memory
